<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Product | Lumi Wu]]></title>
  <link href="http://luminsense.github.io/blog/categories/product/atom.xml" rel="self"/>
  <link href="http://luminsense.github.io/"/>
  <updated>2018-07-17T21:58:13+08:00</updated>
  <id>http://luminsense.github.io/</id>
  <author>
    <name><![CDATA[Lumi Wu]]></name>
    <email><![CDATA[wulianglumin@foxmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[从零到一，需要关注的执行重点]]></title>
    <link href="http://luminsense.github.io/blog/thing-to-be-noticed-for-zero-to-one/"/>
    <updated>2016-03-30T01:20:00+08:00</updated>
    <id>http://luminsense.github.io/blog/thing-to-be-noticed-for-zero-to-one</id>
    <content type="html"><![CDATA[<p><img src="/images/article/021.jpg"></p>

<p>现在聊聊从零到一做一款（互联网）产品，需要注意的重点。这些点，我看了很多相关的文章，很少有讲清楚的。趁大半夜的有空，简单列个几点。</p>

<h2>1.一切方案以「可执行」为标准</h2>

<p>写出来的东西定义不明确，拆分的不够细，规则模糊，东西扔给研发之后，人家满脑子都是问号。这是新人最常犯的错误。</p>

<p>举个栗子，假设某款应用有用户间评分的功能，后台需要一个列表监测那些连续被打差评的用户，看看是否存在恶意行为。于是有人在需求中写了这句：「若一个用户连续多次被打低分，则列入观察列表」。</p>

<p>看到这句我就很恼火。「连续」「多次」是什么意思？什么时间内？几次？中间有一次例外还算不算连续？「低分」又是什么意思？低于多少分是低分？是低于绝对值，还是整个系统平均值，还是别的什么值？这种东西就是写出来无法执行的，定义的不够细，写了跟没写一样。</p>

<p>这种细节缺失的背后是逻辑的不清晰和一种「总会有人帮我把事情想清楚」的懒惰，它们会在紧张的「从零到一」过程中产生非常多的无效沟通成本，浪费大量时间去解释、修改。</p>

<p>如果项目中的产品经理都这样，结果将是毁灭性的。<!--more--></p>

<h2>2.设计机制</h2>

<p>不得不说，业内太关注交互、视觉等表层设计了。其实产品设计中更具魅力的，是机制的设计。</p>

<p>机制，就是游戏规则。</p>

<p>往小的说，朋友圈的「关系链封闭」机制远比它的UI更重要，Twitter的关注和转发机制也是同理。放在游戏里，Tom Clancy&rsquo;s The Division 中的暗区机制也是整个游戏的核心，引来了无数捧场和吐槽。</p>

<p>往大的说，房屋限购政策、公司注册制度、股票期权交易规则，都是机制。一个国家或不同国家之间的贫富差距，很大程度上也是由社会的机制（制度）决定的。</p>

<p>机制有好有坏。好的机制能缔造一个均衡的系统，让用户生产与产品定位相符的内容，发生对产品有价值的行为，减少垃圾内容和恶意行为发生的规模和几率。坏的机制，则能产生相反的效果，让系统行为完全脱离控制。</p>

<p>为什么打开各种产品blog，很少看到关于机制设计的内容呢？第一，可能是因为这里没有duang这么炫酷的效果；第二，很多产品的机制都是核心秘密，于是没人拿出来分享是正常的。</p>

<p>所以我也没办法拿出来分享，我只能说这个很重要……</p>

<h2>3.设计产品管理系统</h2>

<p>产品本身重要，产品管理也很重要。数据后台，运营后台，这些都属于产品管理的内容。</p>

<p>数据后台比较好办，友盟等成熟工具一般都能搞定绝大部分问题。但数据需求要尽早定下来，而确定数据需求的过程中，就需要解决几大重要问题：我想判断的事实能通过哪些数据体现？这些数据通过哪些节点定义、采集？这些数据能为以后的迭代路线有哪些指导意义？这些都要提前想好。</p>

<p>与数据后台不同，运营后台一般需要自己搭建。这也是一个产品非常基本和重要的东西，其需求描述的量甚至会超过用户侧的设计。</p>

<p>举几个例子，内容类产品绝对都有个内容运营后台。如果内容是UGC的，那还有一个通过某种规则发现精品内容的运营后台。所有的社交类产品都要搭建一个举报审核后台、异常行为检测后台，以及可以执行的禁言/封号类操作。此外，所有产品都会有最最基础的用户反馈查看后台、全局消息发送后台、文案/入口配置后台。如果产品增长到一定的体量，还需要设计一套灰度发布机制和相应的后台，这个就更复杂了……</p>

<p>设计运营后台的一件要事，是设计运营专员的工作流。</p>

<p>公司雇人是要花钱的，为运营专员设计一套高效的流水线就是在为公司创造价值。而这套流水线也会在运营后台中体现。举个例子，运营专员要做举报审核，首先要浏览：考虑要展示哪些信息？怎么排版效率最高？然后进行操作：无视，或执行惩罚措施，是否有需要标记恶意举报？若没法当场判定惩罚措施，是否有需求打上一个「待定」标签？完事之后怎样汇报？如何评估运营专员做这件事的准确性，并以此为依据进行考核？</p>

<p>其实考虑到了这里，我们的格局就不止是产品设计本身了。</p>

<p>如果加入一个大公司的已有项目，上述这些东西多半是已经弄好的，不用费心去做。但如果是从零到一，情况就不一样了，你必须事无巨细地把这些东西搞定。</p>

<h2>4.通过管理优化效率</h2>

<p>从零到一考验的是整个团队的品质，而作为处在整个团队hub位置的人，更有责任影响并驱动整个团队往更聪明、更高效的方向发展。</p>

<p>我们需要做的是：（1）传播自己对产品的思考和理解，让团队每个人都在一定程度上理解产品的规划与设计；（2）督促研发等岗位对产品设计细节的了解和执行（当然前提是你写得够好）；（3）搞好私人关系，建立影响力。</p>

<p>一个「无脑」的研发，会用错误的方法，把你的设计实现的乱七八糟，让你看到 daily build 后勃然大怒，结局必然是返工、延期、加班，而且这锅还得你背。</p>

<p>而一个「有脑」的研发，会用聪明的方法，实现你的设计，而且还会补全很多你没想到的 corner case，更有可能挑出你设计中的问题并提出建设性建议。</p>

<p>能跟有脑的研发合作，是产品的一件幸事。既然如此，为何不主动点，把身边的研发都变成「有脑的研发」呢？</p>

<h2>5.提前进行营销准备</h2>

<p>无它，就是预先做好准备：</p>

<ul>
<li>在产品设计之初就要明确定位，在执行中不断提取出卖点，特别是文案以及平面品牌元素（最好拉个专业人士一起参与）</li>
<li>提前寻找推广和渠道运营的资源</li>
<li>列好发布计划，提前设计首发活动</li>
<li>提前收集活动运营idea，以后逢年过节可以拿出来用</li>
<li>等等，正在探索中……</li>
</ul>


<p>总的来说，从零到一做件事情，相对而言会复杂很多，但也更有乐趣。在这个过程中，你会发现自己的短板（设计、技术、运营、推广），并想办法去学习、寻找资源而弥补它。同时，你思考的格局、完整性也会比以前更上一个档次。</p>

<p>——</p>

<p><em>题图 © <a href="http://weibo.com/howsillyweare">RealXu</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何看产品之：秘密]]></title>
    <link href="http://luminsense.github.io/blog/product-analysis-4/"/>
    <updated>2016-02-03T19:30:00+08:00</updated>
    <id>http://luminsense.github.io/blog/product-analysis-4</id>
    <content type="html"><![CDATA[<p><img src="/images/article/pa4.jpg"></p>

<p>其实我在写上一篇<a href="http://lumiwu.com/blog/product-analysis-3/">《如何看产品之：时间》</a>的时候，陷入了非常纠结的境地，以至于断断续码了十来天才最终发表。而且，最终的内容，我也认为不甚完整。</p>

<p>究其原因，是因为很多「想法坟场」里的东西都是不能说的…… 斟酌来斟酌去，干脆一点也不写罢了。不过这也刚好触达了之前我想到的最后一个点：秘密。</p>

<p>支付宝为什么要做社交？微信里面埋了多少灰度功能？公诸于众的事往往价值有限，要了解事情发生的内原，就要发现秘密。<!--more--></p>

<p>秘密的就是信息不对等，而最不对等的就是人的想法。往大的说，事情的发展很可能来自某些关键人物的人生经历、价值观；往小的说，可能是一通电话、一比私底下的交易，或者某些从未公开的业务数据。</p>

<p>不理解这些人的经历和想法，就无法理解他们的行动和产品。从结果倒推分析其实毫无任何意义。</p>

<p>去理解的第一步，无非就是排空自己，把自己的固执、偏见甚至三观都暂时抛弃，扩大感觉和同理心。因为秘密很可能是在自己固有的理解范围之外的。</p>

<p>在此基础上，逼迫自己与各种人交谈，即使自己是内向的性格。去了解他们的生活状态和认知，才能得到更多不同领域和层次的信息，发现一个人做一件事的缘由。</p>

<p>另一方面，关于「秘密」的追寻也影响到了我的习惯，特别是阅读和收集信息的习惯：以前总是急于去寻找普适性、理论化的结论，例如所谓「设计原则」「方法论」之流。但现在我着迷于各种案例中的细节，对专门描述一家公司、一个人的传记类作品更情有独钟。我想这就跟数学专业的人看多了公式，总会去看证明过程；程序员用久了开源库，总会去看源码一样。</p>

<p>引发这种习惯是几个月之前，我还在北京的时候。当时坚义正在看《支付战争》这本书。他告诉我 PayPal 经历过的那些内斗是多么有趣。来龙去脉的细节比一些宏观的理论和趋势同等重要，甚至更加重要。任何一个保持开放思维的人都能够觉察到趋势，但做出正确的可行性判断则需要尽可能多的细节，避免踩进前人踩过的坑。</p>

<p>这就是为什么各种网站上的产品分析文章90%都没任何参考意义。因为它们都无法触及那些支撑着整件事情运作的秘密，而真正的秘密是不会公诸于众的。</p>

<p>与其去看产品的现状然后进行臆想式的分析，不如以亲历者角度去深挖那些让事情形成现在模样的背后的细节。</p>

<p>产业链和价值链是一种秘密，产品的更迭也是一种秘密…… 所有有价值的信息，都是某种「秘密」。</p>

<p>EOF</p>

<p>——————</p>

<p><strong>如何看产品</strong> 系列文章（现已完结）</p>

<ol>
<li><a href="http://lumiwu.com/blog/product-analysis-0/">如何看产品之：前言</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-1/">如何看产品之：价值链（上）</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-2/">如何看产品之：价值链（下）</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-3/">如何看产品之：时间</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-4/">如何看产品之：秘密</a></li>
</ol>


<p><em>题图 © <a href="http://weibo.com/howsillyweare">RealXu</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何看产品之：时间]]></title>
    <link href="http://luminsense.github.io/blog/product-analysis-3/"/>
    <updated>2016-02-01T16:00:00+08:00</updated>
    <id>http://luminsense.github.io/blog/product-analysis-3</id>
    <content type="html"><![CDATA[<p><img src="/images/article/pa3.jpg"></p>

<p>以前在看产品的时候，我也经常陷入一个误区：只以静态的角度，看当前的形态。然而，一个活着的产品，一定是经历了更迭，才形成了当前的形态。更迭中的来龙去脉，很有发掘的价值。</p>

<p>而且，当前的形态 ，也并不是产品的最终形态。毕竟，竞争环境和用户行为都有可能变化。还有就是要关注生命周期，不同阶段的产品目标也不太一样。<!--more--></p>

<p>观察第一件事是要复盘。我的做法是，在每个版本更新点，尝试回答这么几个问题：</p>

<ul>
<li>此时已沉淀的资产有哪些（稳定流量、内容、用户关系等） ？</li>
<li>产品处于生命周期的哪个阶段？哪件事最重要？</li>
<li>如果是成长阶段，那么距离建立无可争议的壁垒，还有哪几部要走？</li>
<li>如果是成熟或衰退阶段，应该做些什么去（优雅地）减缓或扭转局势？</li>
<li>此时是否出现了重大方向变更？如果是，那推动变更的外部环境或技术冲击是什么？</li>
</ul>


<p>以熟悉的微信为例。微信的前几个版本（直到4.0前）都处于成长阶段，主线是移动设备的体验和关系链铺设。直到4.0版本，已经积累了很多用户关系，但是用户间的一对一沟通毕竟成本较高，很多关系未能激活。在此基础上憋出的「朋友圈」大招，才是微信最终建立壁垒的关键。（当然这个看法只是朋友圈诸多意义中的一个方面）</p>

<p>复盘中的另一件重要的事，就是去「挖坟」，挖掘产品更迭过程中的「尸体」：那些被废弃的方案，那些被下架的功能，还有那些永远没有机会接触到用户的想法。成功的产品背后一定是成倍体量的想法坟场，很多想法在诞生之初都是被认为有价值的。它们最后为何会死掉？你会在这个问题里发现很多东西。</p>

<p>当然，绝大部分「尸体」都涉及秘密，你需要一些特殊的渠道去获取它们、理解它们。具体我就不多说了。</p>

<p>最后，关于「最终形态」，说起来就有点玄乎了。但这也不是完全无法想象。</p>

<p>前段时间读《只有偏执狂才能生存》。这本书写于1996年。想象一下1996年的互联网，那还是比较原始的时期，属于网景和IE的时代，互联网上的内容还是 Yahoo 这类的门户。这位作者用了一整个章节来描述互联网，并且在过程中提出了互联网对零售的冲击、对媒体的冲击以及对软件分发方式的冲击。站在20年后的今天，也不得不感叹其牛逼。</p>

<p>所以我还是认为，只要有充分的视野和信息，新兴事物的「最终形态」是可以被想象的。书中也描述了这个叫做「10倍速因素」的方法，让我们避免只看到产品最初模型的陷阱：</p>

<blockquote><p>如果你的直觉认为改进10倍之后，这件事物就足以引起人们的兴奋而成为新的威胁因素，你就很可能处在观察一个战略转折点开端的边缘了。因此，应该训练自己深入地思考问题，把最初模型的优劣与该产品或技术的长期潜能和长远意义区分开来。</p></blockquote>

<p>——————</p>

<p><strong>如何看产品</strong> 系列文章（现已完结）</p>

<ol>
<li><a href="http://lumiwu.com/blog/product-analysis-0/">如何看产品之：前言</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-1/">如何看产品之：价值链（上）</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-2/">如何看产品之：价值链（下）</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-3/">如何看产品之：时间</a></li>
<li><a href="http://lumiwu.com/blog/product-analysis-4/">如何看产品之：秘密</a></li>
</ol>


<p><em>题图 © <a href="http://weibo.com/howsillyweare">RealXu</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一夜一梦]]></title>
    <link href="http://luminsense.github.io/blog/one-night-one-dream/"/>
    <updated>2016-01-27T23:00:00+08:00</updated>
    <id>http://luminsense.github.io/blog/one-night-one-dream</id>
    <content type="html"><![CDATA[<p><img src="/images/article/the-god.jpg"></p>

<p><strong>壹、</strong></p>

<p>今早起床，似乎一切都没有发生过。昨夜婉如一梦。</p>

<p>我说的是微信红包照片。据说，微信内部是欢呼雀跃的。</p>

<p>下午5:00第一波无限制的全量开放，提前两个小时就结束了。其实结束的原因很简单：朋友圈被毛玻璃攻陷了，这个功能的微观生命周期走到了终点。<!--more--></p>

<p><strong>贰、</strong></p>

<p>这其实是把正常的社交网络生命周期，压缩为短短一个小时。</p>

<p>17:00，最先发现的人们惊呼牛逼，微信团队又做了一件牛逼的事情，这个概念好有趣，好牛逼！</p>

<p>17:30，大家都开始玩起来了，你会发现朋友圈里全是毛玻璃。同时，你的新鲜感已经过了。半小时前，你给很多朋友发红包，但看到的图片也就那样。你的好奇心开始减弱。你觉得它不再有趣了。</p>

<p>18:00，热点扩散到了更多的人群，包括后知后觉的某位女神。女神发了一张红包照片，内容是自己的靓照。但它被淹没在茫茫毛玻璃海了。除了少数几人之外，大家都对这件事没兴趣了。女神觉得点赞的人太少，炸毛。与此同时，成千上万的模糊图片，也没人关注了。</p>

<p>大家往日在朋友圈中获得的存在感，在红包的门槛下烟消云散，即刻崩塌了。</p>

<p>18:00过去后不久，红包照片的第一个轮回死亡了，享年一个小时。</p>

<p><strong>叁、</strong></p>

<p>与其说是一个产品，不如说是一场社会实验。</p>

<p>在图上加一层膜，会让你看到的东西有什么不一样吗？也许一开始会，但到了后面，加了膜的图片内容跟普通的朋友圈其实并无二致。这再一次印证了朋友圈设计的一个原点：你所看到的内容，由你自己决定。</p>

<p>这是因为群体的自我「净化」。所谓「净化」，就是生产者通过观察者的评论、点赞等反馈调整接下来要分享的内容，以迎合观察者的喜好与品位，同时优化自己获得的存在感。而对于观察者，每一次评论、点赞、拉黑都会对接下来收到的信息产生细微的影响，为朋友圈内容的「净化」献一份力。</p>

<p>这是用户无意识的反馈循环，只要经过时间的沉淀，就能形成一套自发的信息过滤机制。红包照片的体验演化，再次证明了这点。</p>

<p>所以下一次当你抱怨自己朋友圈都是鸡汤的时候，请审视自身。你是怎样的，你的朋友圈就是怎样的。</p>

<p><strong>肆、</strong></p>

<p>红包照片的「蒸发冷却」效应提前两小时到来，应该比微信的预期更快。</p>

<p>其冷却过程，如「贰」中所描述，是由于观察者体验疲劳和预期降低，导致他们的行为和反馈减少；而当生产者体验到了反馈的减少，便产生了失望的情绪，影响了持续使用的意愿。而红包照片在编辑时的认知成本，大于普通朋友圈（你要在发什么、写什么上更花心思）。期望越高，失望越大。于是随着观察者的疲劳，生产者的行为也迅速冷却下来了。</p>

<p>这就是社交网络永恒的主题：存在感。</p>

<p>存在感，是多么恐怖、多么无法抗拒又多么脆弱的人类需求。它帮助人们对抗空虚和弱小，但又驱使着人们迈向失落、嫉妒和痛苦的深渊。</p>

<p>你花心思表现给这个世界，把自己硬塞进别人的视野中。但其实，世界上并没有那么多人想花心思了解你。</p>

<p><strong>伍、</strong></p>

<p>没有人是上帝。没有人能居高临下俯视众生。没有人能拨动一个开关，就让无数凡人翩翩起舞。</p>

<p>然而，今天的微信正在做的，就是这么一件事情。</p>

<p>——————</p>

<p><em>题图 © <a href="http://weibo.com/howsillyweare">RealXu</a></em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[微信又炸了]]></title>
    <link href="http://luminsense.github.io/blog/wechat-has-blown/"/>
    <updated>2016-01-26T22:40:00+08:00</updated>
    <id>http://luminsense.github.io/blog/wechat-has-blown</id>
    <content type="html"><![CDATA[<p>今天微信对红包照片功能进行了一轮「公测」，朋友圈已经炸啦！</p>

<p>我没记错的话，这应该是微信的很多第一次：</p>

<ul>
<li>第一次在基础产品层面对全量用户做运营活动；</li>
<li>第一次在朋友圈中，对某些用户的名字、评论/点赞按钮使用了特殊颜色，做区分化处理；</li>
<li>第一次在「查看大图」这样的重要界面的明显位置投放广告；</li>
<li>第一次将红包用于用户间的有偿行为；</li>
<li>别人的红包图片下的「N人看了照片」，第一次突破了朋友圈的「关系链封闭」原则；</li>
</ul>


<p>今天的「公测」只到晚上八点，春节那会应该会更high。它能达到 Allen 的预期效果吗？按目前的节奏，有没有提前关闭的可能？它想要的最终形态是什么？这是不是意味着 Allenzhang 的思路有一些改变？</p>

<p>我也不知道，只能拭目以待……<!--more--></p>

<p>————</p>

<p>P.S. 第一次使用可能不会注意到的产品逻辑：</p>

<ul>
<li>首次开放时间到今晚8:00；</li>
<li>今天发的红包照片会在零点自动删除，至于自己相册里会不会留下记录，今晚揭晓；</li>
<li>发了红包才有资格评论、点赞；</li>
<li>红包图片无法添加位置、提醒谁看；</li>
<li>但红包图片依然可以选择可见分组；</li>
<li>付费后看的图片无法保存。只能举报非法图片。</li>
</ul>


<p>P.P.S. 人的情趣真的很重要。</p>

<p>P.P.P.S. 人还是得做一些牛逼的东西啊。</p>
]]></content>
  </entry>
  
</feed>
